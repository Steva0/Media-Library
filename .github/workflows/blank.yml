name: CMake on multiple platforms with Qt

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: true
      matrix:
        include:
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
          - os: ubuntu-latest
            c_compiler: clang
            cpp_compiler: clang++

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install Qt on Ubuntu
      if: runner.os == 'Linux'
      run: sudo apt-get update && sudo apt-get install -y qtbase5-dev

    - name: Cache CMake files
      uses: actions/cache@v3
      with:
        path: |
          build
          ~/.cache/CMakeFiles
        key: ${{ runner.os }}-cmake-${{ matrix.cpp_compiler }}-${{ matrix.build_type || 'Release' }}
        restore-keys: |
          ${{ runner.os }}-cmake-

    - name: Configure CMake
      run: >
        cmake -B build
        -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
        -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
        -DCMAKE_BUILD_TYPE=Release
        -S .

    - name: Build
      run: cmake --build build --config Release --parallel

    - name: Run tests with CTest
      working-directory: build
      run: ctest --output-on-failure

    - name: Run MediaLibrary on Linux/macOS
      if: runner.os != 'Windows'
      run: |
        if [ -f ./build/MediaLibrary ]; then
          ./build/MediaLibrary
        else
          echo "::warning::MediaLibrary not found"
        fi

    - name: Run MediaLibrary on Windows
      if: runner.os == 'Windows'
      run: |
        if (Test-Path .\build\Release\MediaLibrary.exe) {
          .\build\Release\MediaLibrary.exe
        } else {
          Write-Host "::warning::MediaLibrary.exe not found"
        }
      shell: pwsh
